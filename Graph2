
package sa;

import java.awt.Color;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;
import org.jfree.ui.ApplicationFrame;
import org.jfree.ui.RefineryUtilities;

/**
 * A simple demonstration application showing how to create a line chart using data from an
 * {@link XYDataset}.
 *
 */
public class Graph extends ApplicationFrame {

    private int a;
    /**
     * Creates a new demo.
     *
     * @param title  the frame title.
     */
    public Graph(final String title, int i) {
        
        super(title);
        a = i;
        
        //Create Chart
        final XYDataset dataset1 = createStepsDataset();
        final JFreeChart chart1 = createChart(dataset1);
        final ChartPanel chartPanel1 = new ChartPanel(chart1);
        chartPanel1.setPreferredSize(new java.awt.Dimension(1000, 540));
        setContentPane(chartPanel1);
    }

    private XYDataset createStepsDataset() {
        final XYSeriesCollection dataset = new XYSeriesCollection();
        
        SoftwareAgents sa1 = new SoftwareAgents(0.5, 0.3, 0.9, 100, 500, -500);
        SoftwareAgents sa2 = new SoftwareAgents(0.5, 0.6, 0.9, 100, 500, -500);
        SoftwareAgents sa3 = new SoftwareAgents(0.5, 0.9, 0.9, 100, 500, -500);
        
        if (a == 0){
        int [] list1 = sa1.sc;
        int [] list2 = sa2.sc;
        int [] list3 = sa3.sc;
        
        final XYSeries series1 = new XYSeries("Gamma 0.3");
        int i = 0;
        while (i < list1.length){
            double state = i;
            double steps = list1[i];
            series1.add(state, steps);
            i++;
        }
        
        final XYSeries series2 = new XYSeries("Gamma 0.6");
        int j = 0;
        while (j < list2.length){
            double state = j;
            double steps = list2[j];
            series2.add(state, steps);
            j++;
        }
        
        final XYSeries series3 = new XYSeries("Gamma 0.9");
        int k = 0;
        while (k < list3.length){
            double state = k;
            double steps = list3[k];
            series3.add(state, steps);
            k++;
        }
        
        dataset.addSeries(series1);
        dataset.addSeries(series2);
        dataset.addSeries(series3);
        
        }
        else if (a==1){
        double [] list1 = sa1.vc;
        double [] list2 = sa2.vc;
        double [] list3 = sa3.vc;
        
        final XYSeries series1 = new XYSeries("Gamma 0.3");
        int i = 0;
        while (i < list1.length){
            double state = i;
            double steps = list1[i];
            series1.add(state, steps);
            i++;
        }
        
        final XYSeries series2 = new XYSeries("Gamma 0.6");
        int j = 0;
        while (j < list2.length){
            double state = j;
            double steps = list2[j];
            series2.add(state, steps);
            j++;
        }
        
        final XYSeries series3 = new XYSeries("Gamma 0.9");
        int k = 0;
        while (k < list3.length){
            double state = k;
            double steps = list3[k];
            series3.add(state, steps);
            k++;
        }
        
        dataset.addSeries(series1);
        dataset.addSeries(series2);
        dataset.addSeries(series3);
        }
                
        return dataset;
    }
   
    private JFreeChart createChart(final XYDataset dataset) {
        
        // create the chart...
        final JFreeChart chart = ChartFactory.createXYLineChart(
            "Number of Steps per Episode",      // chart title
            "Number of Episodes",     // x axis label
            "NUmber of Steps",        // y axis label
            dataset,                  // data
            PlotOrientation.VERTICAL,
            true,                     // include legend
            true,                     // tooltips
            false                     // urls
        );

        chart.setBackgroundPaint(Color.white);

        final XYPlot plot = chart.getXYPlot();
        plot.setBackgroundPaint(Color.lightGray);
        plot.setDomainGridlinePaint(Color.white);
        plot.setRangeGridlinePaint(Color.white);
        
        final XYLineAndShapeRenderer renderer = new XYLineAndShapeRenderer();
        renderer.setSeriesLinesVisible(0, true);
        renderer.setSeriesShapesVisible(0, false);
        renderer.setSeriesLinesVisible(1, true);
        renderer.setSeriesShapesVisible(1, false);
        renderer.setSeriesLinesVisible(2, true);
        renderer.setSeriesShapesVisible(2, false);
        plot.setRenderer(renderer);

        final NumberAxis rangeAxis = (NumberAxis) plot.getRangeAxis();
        rangeAxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits());
                
        return chart;
    }
    
    public static void main(String[] args) {
        final Graph demo = new Graph("Value Graph", 0);
        demo.pack();
        RefineryUtilities.centerFrameOnScreen(demo);
        demo.setVisible(true);
        
        final Graph demo2 = new Graph("Value Graph", 1);
        demo2.pack();
        RefineryUtilities.centerFrameOnScreen(demo2);
        demo2.setVisible(true);
    }
}
